#!/bin/sh
#
#####################################################################
##
##      DWS4000 SNR_Roaming for Chaos Calmer 15.05.1 @linux3.18
##
##                Copyright 2019, by Dasan InfoTek Co., 
##
##                         ...leesy...
##
#####################################################################

#-----------------------------#
cp /etc/dws4000/wroaming.config /tmp/wroaming.config
. /tmp/wroaming.config
#-----------------------------#

iw phy0 info > /tmp/DWSroaming_phy0

get_actSSID() {
	iw dev wlan0 link 2> /dev/null | grep "SSID:" | awk '{ print $2 }'
}

get_curSSID() {
	uci -q get wireless.@wifi-iface[0].ssid
}

get_actFreqMHz() {
	iw dev wlan0 link 2> /dev/null | grep "freq:" | awk '{ print $2 }'
}

get_curFreqMHz() {
	local ch
	ch=$(uci -q get wireless.radio0.channel)
	grep -E -m1 "(\* .... MHz \[$ch\])" /tmp/DWSroaming_phy0 | \
		awk '{print $2}'
}

# $1 = frequency in MHz
get_MHz2GHz() {
	echo $1 | sed -e "s/\([0-9]\)\([0-9]*\)/\1\.\2/"
}

get_actSNR() {
	local SNR
	SNR=$(iwinfo wlan0 info 2> /dev/null | grep Link | awk '{print $6}' | cut -d'/' -f1)
	[ -z "$SNR" ] && SNR=-2
	[ "$SNR" = "unknown" ] && SNR=-1
	echo $SNR
}

get_RXpkts() {
	ifconfig wlan0 | grep "RX packets" | awk '{ print $2 }' | cut -c9-
}

# $1 = frequency in MHz
get_channel() {
	grep -E -m1 "(\* $1 MHz \[[0-9]*\])" /tmp/DWSroaming_phy0 | \
		cut -d'[' -f2 | cut -d']' -f1
}

# $1: new channel
change_channel() {
	#echo "change_channel $1"
	uci set wireless.radio0.channel=$1
	uci commit
	/etc/init.d/network reload
}

# $1: new frequency in MHz
change_freq() {
	local targetFreq=$1
	local ch
	#echo "change_freq targetFreq=$targetFreq"

	ch=$(get_channel $targetFreq)
	# check string is null
	[ -z "$ch" ] && exit -1 

	change_channel $ch

	local timer=0
	local timeout=30 # 3secs <- 100msec x 30
	#local timeout=50 # 5secs <- 100msec x 50
	local actSSID
	local actFreq
	while : ; do
		msleep 100

		actSSID=$(get_actSSID)
		[ "$actSSID" = "$curSSID" ] && {
			actFreq=$(get_actFreqMHz)
			#echo -n "$actFreq "
			[ "$actFreq" = "$targetFreq" ] && break
			# check string is not null
			[ -n "$actFreq" ] && {
				/etc/init.d/network restart
				sleep 1
			}
		}

		timer=$((timer+1))
		[ $timer -ge $timeout ] && break
	done
}

### Start of main script

rm -f /tmp/.force_Roaming

sleep 1

snrMin=$wlan0_RunSNR
runFreqGHz1=$wlan0_RunFreq1 # in GHz
runFreqGHz2=$wlan0_RunFreq2 # in GHz
runFreqMHz1=$(echo "$runFreqGHz1*1000/1" | bc) # to MHz
runFreqMHz2=$(echo "$runFreqGHz2*1000/1" | bc) # to MHz

curSSID=$(get_curSSID)

curFreqMHz=$(get_curFreqMHz) # to MHz
curFreqGHz=$(get_MHz2GHz $curFreqMHz) # in GHz

actSNR=0

# Check actual freq. match with freq. of config.
StartLoopTimer=0
StartLoopTimeout=5 # 5secs
while : ; do
	actFreqMHz=$(get_actFreqMHz)

	[ "$actFreqMHz" = "$curFreqMHz" ] && break
	# check string is not null
	[ -n "$actFreqMHz" ] && {
		/etc/init.d/network restart
		sleep 1
	}

	StartLoopTimer=$((StartLoopTimer+1))
	[ $StartLoopTimer -ge $StartLoopTimeout ] && {
		echo "Error! curF=$curFreqMHz actF=$actFreqMHz"
		break
	}

	sleep 1
done

echo "SNR=$snrMin F1=$runFreqGHz1 F2=$runFreqGHz2 curF=$curFreqGHz=$(get_MHz2GHz $actFreqMHz) SSID=$curSSID"

cLOOP=0
RXpkts=$(get_RXpkts)

while : ; do
	actSNR=$(get_actSNR)  ##!!
	
	if [ $snrMin -gt $actSNR ] || [ -e /tmp/.force_Roaming ] ; then
		msleep 20

		actSNR=$(get_actSNR)  ##!!
		
		if [ $snrMin -gt $actSNR ] || [ -e /tmp/.force_Roaming ] ; then
			if [ -e /tmp/.force_Roaming ] ; then
				echo -n "FORCED: "
			else
				echo -n "SNR($actSNR): "
			fi

			echo -n "$curFreqGHz->"
			
			cnt=1
			cntMax=4 # must be even value instead odd

			if [ $curFreqMHz -eq $runFreqMHz1 ] ; then
				echo -n "$runFreqGHz2 "
				change_freq $runFreqMHz2 
				nextFreq=1
			elif [ $curFreqMHz -eq $runFreqMHz2 ] ; then
				echo -n "$runFreqGHz1 "
				change_freq $runFreqMHz1
				nextFreq=2
			else
				echo -n "Freq_Unknown! "
				change_freq $runFreqMHz1
				nextFreq=2
			fi

			while : ; do
				actSNR=$(get_actSNR)  ##!!
				if [ $snrMin -gt $actSNR ] ; then
					echo -n "@"
					if [ $nextFreq -eq 1 ] ; then
						change_freq $runFreqMHz1
						nextFreq=2
					else
						change_freq $runFreqMHz2	
						nextFreq=1
					fi
				else
					echo -n "_($cnt)OK! "
					break  ##--->
				fi
				
				cnt=$((cnt+1))
				if [ $cnt -ge $cntMax ] ; then
					echo -n "_($cnt)Fail! "
					/etc/init.d/network restart
					sleep 5
					break  ##--->
				fi
			done

			curFreqMHz=$(get_curFreqMHz) # to MHz
			curFreqGHz=$(get_MHz2GHz $curFreqMHz) # in GHz
			actFreqMHz=$(get_actFreqMHz)
			actSNR=$(get_actSNR)  ##!!
			echo "($curFreqGHz=$(get_MHz2GHz $actFreqMHz) $actSNR)"

			cLOOP=0
			RXpkts=$(get_RXpkts)

			[ -e /tmp/.force_Roaming ] && rm -f /tmp/.force_Roaming
		fi
	fi

	msleep 100 ##2

	cLOOP=$((cLOOP+1))
	if [ $cLOOP -gt 10 ] ; then
		cLOOP=0

		RXpkts2=$(get_RXpkts)
		if [ $RXpkts -eq $RXpkts2 ] ; then
			echo " __NONE_RxPackets_?? " $RXpkts2
		fi

		RXpkts=$RXpkts2
	fi
done

### End of main script
