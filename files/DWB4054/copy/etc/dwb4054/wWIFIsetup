#!/bin/sh
# (C) 2019 DASAN InfoTek,
#           leesy@DSI
##
. wCommon

DIALOG=${DIALOG=dialog}

tempfile="/tmp/config_wifi$$"
trap "rm -f $tempfile; exit" 0 1 2 5 15

textinput() {
	$DIALOG \
	--ascii-lines --title "INPUT BOX" --clear \
	--inputbox "$1" 20 76 "$2" 2> $tempfile

	retval=$?

	case $retval in
	0)
		inputvar=$(cat $tempfile)
		;;
	1)
		inputvar=$2
		;;
	255)
		inputvar=$2
		;;
	esac

	if [ "$inputvar" = "--" ] ; then inputvar="" ; fi

	return $retval
}

menuinput() {

	menucmd=$(cat <<END    
$DIALOG --ascii-lines --clear --cr-wrap --title "[[ Wireless LAN Configurations ]]" \
	--menu "$3\nWLAN=[ $rHWMODE ESSID:$rSSID ] \nStat=[ SNR:$rSNR Freq:$rFreq STAs:$rSTA ] \
	\n$rDATE >> Please select menu: \n" 22 76 11 \
	$1 \
	2> $tempfile
END
)

eval $menucmd

	retval=$?

	case $retval in
	0)
		inputvar=$(cat $tempfile)
		;;
	1)
		inputvar=$2
		;;
	255)
		inputvar=$2
		;;
	esac

	if [ "$inputvar" = "--" ] ; then inputvar="" ; fi
}


########################## begin

rm -f $tempfile

Freq24TBL="\
auto\n\
2.4G = 2.412(1) 2.417(2) 2.422(3) 2.427(4) 2.432(5) 2.437(6) 2.442(7)\n\
       2.447(8) 2.452(9) 2.457(10) 2.462(11) 2.467(12) 2.472(13)\n"

Freq5TBL="\
auto\n\
5.xG = 5.180(36) 5.200(40) 5.220(44) 5.240(48)\n\
       5.745(149) 5.765(153) 5.785(157) 5.805(161)"

mchoice="";

while : ; do

	inputvar=""

	readModelName

	readCFG
	#######

	readWIFI
	#######

	readDATE
	#######

	if [ "$cWencr" = "none" ] ; then
		menuinput '"ReviewSTATs"  "Status Review .... Enter!"
			"1Wlan_Band"    "WLAN Band _______________________($cWband GHz)"
			"2Wlan_Freq"    "WLAN Frequency __________________($cWfreq)"
			"3Wlan_eSSID"   "WLAN eSSID/Wireless-Name ________($cWssid)"
			"4Wlan_EncUSE"  "WLAN Encription [none/wep/psk2] _($cWencr)"
			"X_ExitCancel"  "Exit or Cancel to upper Menu"'
	else
		menuinput '"ReviewSTATs"  "Status Review .... Enter!"
			"1Wlan_Band"    "WLAN Band _______________________($cWband GHz)"
			"2Wlan_Freq"    "WLAN Frequency __________________($cWfreq)"
			"3Wlan_eSSID"   "WLAN eSSID/Wireless-Name ________($cWssid)"
			"4Wlan_EncUSE"  "WLAN Encription [none/wep/psk2] _($cWencr)"
			"5Wlan_EncKEY"  "WLAN Encription [Key Code] ______($cWkey)"
			"X_ExitCancel"  "Exit or Cancel to upper Menu"'
	fi

	case $inputvar in

	ReviewSTATs)
		;;

	1Wlan_Band)
		inputvar=$cWband
		errormsg=""
		while :; do
			textinput \
				 "Please enter WiFi Band [2.4/5]GHz\n\n"$(
				)"Examples:\n"$(
	 			)" ex1)2.4  ex2)5\n"$(
				)"\n$errormsg\n" \
				"$inputvar"
			retval=$?
			# Check return error
			[ $retval -ne 0 ] && break
			# Check changed
			[ "$inputvar" = "$cWband" ] && break
			# Check input string is one of WiFi Band
			if [ "$inputvar" = "2.4" ] ; then
				uci set wireless.radio0.hwmode="11g"
				uci set wireless.radio0.channel="auto"
				break
			elif [ "$inputvar" = "5" ] ; then
				uci set wireless.radio0.hwmode="11a"
				uci set wireless.radio0.channel="auto"
				break
			fi
			errormsg="Check input value is WiFi Band!"
		done
		;;

	2Wlan_Freq)
		[ "$cWband" = "2.4" ] && FreqTBL=$Freq24TBL || FreqTBL=$Freq5TBL
		inputvar=$cWfreq
		errormsg=""
		while :; do
			textinput \
				 "Please enter Running-Frequency... with N.NNN GHz\n\n"$(
				)"Examples:\n"$(
				)"$FreqTBL\n"$(
				)"\n$errormsg\n" \
				"$inputvar"
			retval=$?
			# Check return error
			[ $retval -ne 0 ] && break
			# Check changed
			[ "$inputvar" = "$cWfreq" ] && break
			# Check one of FreqTBL
			[ -n "$inputvar" ] && [ "$inputvar" = "auto" ] && {
                uci set wireless.radio0.channel="$inputvar"
                break
            }
			[ -n "$inputvar" ] && [ "$inputvar" = "$(echo "$FreqTBL" | grep -o -E -m1 "( $inputvar\([0-9]*\))" | cut -d' ' -f2 | cut -d'(' -f1)" ] && {
				uci set wireless.radio0.channel="$(echo "$FreqTBL" | grep -o -E -m1 "($inputvar\([0-9]*\))" | cut -d'(' -f2 | cut -d')' -f1)"
				break
			}
			errormsg="Check input one of Freq table"
		done
		;;

	3Wlan_eSSID)
		inputvar=$cWssid
		errormsg=""
		while :; do
			textinput \
				 "Please enter Wireless LAN ESSID/Name ...\n\n"$(
				)"Examples:\n"$(
	 			)" ex1)WLAN001  ex2)SR-123\n"$(
				)"\n$errormsg\n" \
				"$inputvar"
			retval=$?
			# Check return error
			[ $retval -ne 0 ] && break
			# Check changed
			[ "$inputvar" = "$cWssid" ] && break
			# Check input string is not null
			if [ -n "$inputvar" ] ; then
				uci set wireless.@wifi-iface[0].ssid="$inputvar"
				break
			fi
			errormsg="Check input value is SSID!"
		done
		;;

	4Wlan_EncUSE)
		inputvar=$cWencr
		errormsg=""
		while :; do
			textinput \
				 "Please enter Wireless LAN Encription Type [none/wep/psk2]\n\n"$(
				)"Examples:\n"$(
	 			)" ex1)none  ex2)wep-open  ex3)psk2+ccmp\n"$(
				)"\n$errormsg\n" \
				"$inputvar"
			retval=$?
			# Check return error
			[ $retval -ne 0 ] && break
			# Check changed
			[ "$inputvar" = "$cWencr" ] && break
			# Check encryption types
			if [ "$inputvar" = "psk2+ccmp" ] ; then
				uci set wireless.@wifi-iface[0].encryption="psk2+ccmp"
				break
			elif [ "$inputvar" = "wep-open" ] ; then
				uci set wireless.@wifi-iface[0].encryption="wep-open"
				break
			elif [ -z "$inputvar" ] || [ "$inputvar" = "none" ] ; then
				uci set wireless.@wifi-iface[0].encryption="none"
				break
			fi
			errormsg="Check input value is one of encryption type!"
		done
		;;

	5Wlan_EncKEY)
		inputvar=$cWkey
		errormsg=""
		while :; do
			if [ "$cWencr" = "psk2+ccmp" ] ; then
				textinput \
					 "Please enter Wireless LAN Encription-Key-Code...\n\n"$(
					)"Examples: must input more and equal than 8 chars\n"$(
	 				)" ex1)12345678  ex2)1234567890123\n"$(
					)"\n$errormsg\n" \
					"$inputvar"
				retval=$?
				# Check return error
				[ $retval -ne 0 ] && break
				# Check changed
				[ "$inputvar" = "$cWencr" ] && break
				# Check input string is not null
				if [ -n "$inputvar" ] ; then
					uci set wireless.@wifi-iface[0].key="$inputvar"
					break
				fi
			else # elif [ "$cWencr" = "wep-open" ] ; then
				textinput \
					 "Please enter Wireless LAN Encription-Key-Code...\n\n"$(
					)"Examples: must input 5 chars or 13 chars\n"$(
	 				)" ex1)12345 ex2)1234567890123 ex3)string13chars\n"$(
					)"\n$errormsg\n" \
					"$inputvar"
				retval=$?
				# Check return error
				[ $retval -ne 0 ] && break
				# Check changed
				[ "$inputvar" = "$cWencr" ] && break
				# Check input string is not null
				if [ -n "$inputvar" ] && ([ ${#inputvar} -eq 5 ] || [ ${#inputvar} -eq 13 ])  ; then
					uci set wireless.@wifi-iface[0].key="1"
					uci set wireless.@wifi-iface[0].key1="s:$inputvar"
					break
				fi
			fi
			errormsg="Check input key code and size is 5 or 13!"
		done
		;;

	X_ExitCancel | *)
		rm $tempfile >/dev/null 2>/dev/null
		exit 0
		;;

	esac

done

