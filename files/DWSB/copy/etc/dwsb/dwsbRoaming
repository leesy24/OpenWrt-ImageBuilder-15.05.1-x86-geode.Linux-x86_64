#!/bin/sh
#
#####################################################################
##
##            DWSB Configure for Chaos Calmer 15.05.1 @linux3.18
##
##            (dwsbRoaming):{ Redundant Roaming with DUAL-WLAN Station}
##
##            Copyright 2020, by Dasan InfoTEK 
##
##                         ...leesy@dsintek.com...
##
##
##
##     dwsbRoaming SNRmin SNRdelta PingIP PingTO PingFC
##     --------------------------------------------------------------------------
##       SNRmin   : [0].... Disable-SNR-Roaming, Nomal=[10~15]
##       SNRdelta : [0].... Disable-SNR-Roaming, Nomal=[15~25]
##       SNR-Roaming.!! if{mySNR < SNRmin}--&&--{[mySNR] > [otherSNR+SNRdelta]}!!
##     --------------------------------------------------------------------------
##       PingIP : [10.1.1.123]
##       PingTO : [1~1000] in milli second
##       PingFC : [0].....Disable-PING-Roaming, Nomal=[3,1~4] ;If Fail more [3]=4,5,
##
#####################################################################

	## Dual--UnASSO : DW_WLactCNT=0
	## Dual--ACT :: DW_WLact==2

log() {
  echo "$@"
  logger -t $(basename $0) "$@"
}

#-----------------------------#
### Load dual station roaming configurations from file
[ -e /etc/dwsb/dual_sta_roaming.cfg ] && {
	cp /etc/dwsb/dual_sta_roaming.cfg /tmp/dual_sta_roaming.cfg
	. /tmp/dual_sta_roaming.cfg
}
USE_DUALSTATION_MODE=$_USE_DUALSTATION_MODE
SNRmin=$_SNRmin
SNRdelta=$_SNRdelta
PingIP=$_PingIP
PingTO=$_PingTO
PingFC=$_PingFC
#-----------------------------#

[ "$USE_DUALSTATION_MODE" != "Y" ] && {
	/etc/init.d dwsbRoamming disable
	log "Dual station Roaming mode disabled. ---> exit"
	exit 0
} 
log ""
log ">>[ dwsbRoaming ] SNRmin=$SNRmin SNRdelta=$SNRdelta Ping IP=$PingIP TO=$PingTO FC=$PingFC"

rm -f /tmp/.force_Roaming

Fp_ToutCNT=0
Fp_aliveCNT=0
##----------!

############
while : ; do
############

	DW_brshow=$(brctl show | grep wlan)
	### Get first wlan
	DW_WLact=$(echo "$DW_brshow" | awk '{print $1}' | head -1)
	### Get number of wlan word
	DW_WLactCNT=$(echo "$DW_brshow" | grep -c wlan)
	
	### Grep line which has SNR word
	DW_asso0=$(iwinfo wlan0 assoclist | grep SNR)
	DW_asso1=$(iwinfo wlan1 assoclist | grep SNR)
	### Get SNR word count in text
	DWassoWC0=$(echo "$DW_asso0" | grep -c SNR)
	DWassoWC1=$(echo "$DW_asso1" | grep -c SNR)
	### Check SNR word count
	[ $DWassoWC0 -ne 0 ] && {
		### Get SNR value via Extract second string in parentheses
		DWassoSNR0=$(echo "$DW_asso0" | awk -F'[()]' '{print $2}' | awk '{print $2}')
	} || {
		DWassoSNR0=0
	}
	[ $DWassoWC1 -ne 0 ] && {
		### Get SNR value via Extract second string in parentheses
		DWassoSNR1=$(echo "$DW_asso1" | awk -F'[()]' '{print $2}' | awk '{print $2}')
	} || {
		DWassoSNR1=0
	}
	##
	msleep 100
	##
	### Grep line which has SNR word
	DW_asso0=$(iwinfo wlan0 assoclist | grep SNR)
	DW_asso1=$(iwinfo wlan1 assoclist | grep SNR)
	### Get SNR word count in text
	DWassoWC0=$(echo "$DW_asso0" | grep -c SNR)
	DWassoWC1=$(echo "$DW_asso1" | grep -c SNR)
	### Check SNR word count
	[ $DWassoWC0 -ne 0 ] && {
		### Get SNR value via Extract second string in parentheses
		DWassoSNR0t=$(echo "$DW_asso0" | awk -F'[()]' '{print $2}' | awk '{print $2}')
	} || {
		DWassoSNR0t=0
	}
	[ $DWassoWC1 -ne 0 ] && {
		### Get SNR value via Extract second string in parentheses
		DWassoSNR1t=$(echo "$DW_asso1" | awk -F'[()]' '{print $2}' | awk '{print $2}')
	} || {
		DWassoSNR1t=0
	}
	##
	DWassoSNR0=$((DWassoSNR0+DWassoSNR0t))
	DWassoSNR1=$((DWassoSNR1+DWassoSNR1t))
	##
	msleep 100
	##
	### Grep line which has SNR word
	DW_asso0=$(iwinfo wlan0 assoclist | grep SNR)
	DW_asso1=$(iwinfo wlan1 assoclist | grep SNR)
	### Get SNR word count in text
	DWassoWC0=$(echo "$DW_asso0" | grep -c SNR)
	DWassoWC1=$(echo "$DW_asso1" | grep -c SNR)
	### Check SNR word count
	[ $DWassoWC0 -ne 0 ] && {
		### Get SNR value via Extract second string in parentheses
		DWassoSNR0t=$(echo "$DW_asso0" | awk -F'[()]' '{print $2}' | awk '{print $2}')
	} || {
		DWassoSNR0t=0
	}
	[ $DWassoWC1 -ne 0 ] && {
		### Get SNR value via Extract second string in parentheses
		DWassoSNR1t=$(echo "$DW_asso1" | awk -F'[()]' '{print $2}' | awk '{print $2}')
	} || {
		DWassoSNR1t=0
	}
	##
	DWassoSNR0=$(((DWassoSNR0+DWassoSNR0t)/3))
	DWassoSNR1=$(((DWassoSNR1+DWassoSNR1t)/3))
	##------------------------------------------------------Avr(+/3)!!
	[ $DWassoSNR0 -eq 0 ] && {
		DWassoWC0=0
	} || {
		DWassoWC0=1
	}
	[ $DWassoSNR1 -eq 0 ] && {
		DWassoWC1=0
	} || {
		DWassoWC1=1
	}
	##log ">> DWassoSNR0 = $DWassoSNR0  >> DWassoSNR1 = $DWassoSNR1 "

### if [ $SNRmin -gt 0 ] && [ $SNRmin -lt 50 ] && [ $SNRdelta -gt 5 ] && [ $SNRdelta -lt 50 ] ; then
########################################################################################################
	### Check need to force roaming
	if [ -e /tmp/.force_Roaming ] ; then
		if [ "$DW_WLact" = "wlan0" ] ; then
			log " Forced roaming ---> Wlan0==>Wlan1"
			/usr/sbin/brctl delif br-lan wlan0  ##-
			/usr/sbin/brctl addif br-lan wlan1  ##+
			##
			sleep 5 # sleep 5secs to wait until network stable
		else
			log " Forced roaming ---> Wlan1==>Wlan0"
			/usr/sbin/brctl delif br-lan wlan1  ##-
			/usr/sbin/brctl addif br-lan wlan0  ##+
			##
			sleep 5 # sleep 5secs to wait until network stable
		fi

		### Reset fping alive count value
		Fp_aliveCNT=0

		[ -e /tmp/.force_Roaming ] && rm -f /tmp/.force_Roaming

		continue ##------------------------------>>>
	fi

	### Check Station associated both
	if [ $DWassoWC0 -ne 0 ] && [ $DWassoWC1 -ne 0 ] ; then  ############# Dual--ASSO
		### Check SNR larger than 10dBm any station
		if [ $DWassoSNR0 -gt 10 ] || [ $DWassoSNR1 -gt 10 ] ; then  ## Dual--ACT :: DW_WLactCNT==2
		############( ONE-of-SNR_>>_minMINminMIN )################
			if [ $DW_WLactCNT -ge 2 ] ; then  						## Dual--ACT :: DW_WLactCNT==2
				if [ $DWassoSNR0 -ge $DWassoSNR1 ] ; then
					log "Enable wlan0 $DWassoSNR0 $DWassoSNR1"
					/usr/sbin/brctl delif br-lan wlan1  ##-
					/usr/sbin/brctl addif br-lan wlan0  ##+
					##
					sleep 5 # sleep 5secs to wait until network stable
				else
					log "Enable wlan1 $DWassoSNR0 $DWassoSNR1"
					/usr/sbin/brctl delif br-lan wlan0  ##-
					/usr/sbin/brctl addif br-lan wlan1  ##+
					##
					sleep 5 # sleep 5secs to wait until network stable
				fi
			else
				if [ $DW_WLactCNT -eq 0 ] ; then  					## None--ACT :: DW_WLactCNT==0
					log "Enable wlan0 and wlan1 $DWassoSNR0 $DWassoSNR1"
					/usr/sbin/brctl addif br-lan wlan0  ##+
					/usr/sbin/brctl addif br-lan wlan1  ##+
					##
					sleep 5 # sleep 5secs to wait until network stable
				else
					########################################		## One---ACT :: DW_WLactCNT==1
					if [ $SNRmin -gt 0 ] ; then
						DWassoSNR0x2=$((DWassoSNR0+SNRdelta))  ##$((DWassoSNR0+(DWassoSNR0/3)))
						DWassoSNR1x2=$((DWassoSNR1+SNRdelta))  ##$((DWassoSNR1+(DWassoSNR1/3)))
						if [ $DWassoSNR1 -lt $SNRmin ] && [ $DWassoSNR0 -gt $DWassoSNR1x2 ] ; then 
							if [ "$DW_WLact" != "wlan0" ] ; then
								log " $DW_WLact $DWassoSNR0 $DWassoSNR1 ---> Wlan1==>Wlan0"
								/usr/sbin/brctl delif br-lan wlan1  ##-
								/usr/sbin/brctl addif br-lan wlan0  ##+
								##
								sleep 5 # sleep 5secs to wait until network stable
								continue ##------------------------------>>>
							fi
						fi
						if [ $DWassoSNR0 -lt $SNRmin ] && [ $DWassoSNR1 -gt $DWassoSNR0x2 ] ; then 
							if [ "$DW_WLact" != "wlan1" ] ; then
								log " $DW_WLact $DWassoSNR0 $DWassoSNR1 ---> Wlan0==>Wlan1"
								/usr/sbin/brctl delif br-lan wlan0  ##-
								/usr/sbin/brctl addif br-lan wlan1  ##+
								##
								sleep 5 # sleep 5secs to wait until network stable
								continue ##------------------------------>>>
							fi
						fi
					fi
					########################################
					########################################----------------(PingFC==="3")
					if [ $PingFC -gt 0 ] && [ $PingFC -lt 5 ] ; then
						Acnt=0
						Fcnt=0
						for i in 1 2 3 4 5 ## 6 7 8 9 10
						do
							# Check AP IP via fping 
							fping -4 -b0 -t$PingTO -r1 -q $PingIP && {
								# fping returned success
								Acnt=$((Acnt+1))
							} || {
								# fping returned fail
								Fcnt=$((Fcnt+1))
							}
							[ $i -lt 5 ] && msleep 10
						done
						####
						if [ $Fcnt -gt $PingFC ] ; then     ##--(Fcnt==="4~5")
							if [ $Fp_aliveCNT -gt 1 ] ; then  ##-----------------X2-Looped!!
								if [ "$DW_WLact" != "wlan0" ] ; then
									log " Ping-Failed $Fcnt ---> Wlan1==>Wlan0"
									/usr/sbin/brctl delif br-lan wlan1  ##-
									/usr/sbin/brctl addif br-lan wlan0  ##+
									##
									sleep 5 # sleep 5secs to wait until network stable
								else
									log " Ping-Failed $Fcnt ---> Wlan0==>Wlan1"
									/usr/sbin/brctl delif br-lan wlan0  ##-
									/usr/sbin/brctl addif br-lan wlan1  ##+
									##
									sleep 5 # sleep 5secs to wait until network stable
								fi
								##----------!
								Fp_aliveCNT=0
								##----------!!-----(After-Exec--PingRoaming)!!
							fi
							Fp_ToutCNT=$((Fp_ToutCNT+1))
							if [ $Fp_ToutCNT -gt 9999 ] ; then
								Fp_ToutCNT=100
							fi
						else
							Fp_aliveCNT=$((Fp_aliveCNT+1))
							if [ $Fp_aliveCNT -gt 9999 ] ; then
								Fp_aliveCNT=100
							fi
							Fp_ToutCNT=0  ##---------Fp_ToutCNT::NotUSEed~~Yet~~
						fi
					fi
					########################################
				fi
			fi
		fi
		
	else
	### In case Station associated not both
	### else of [ $DWassoWC0 -ne 0 ] && [ $DWassoWC1 -ne 0 ]
		if [ $DWassoWC0 -eq 0 ] && [ $DWassoWC1 -eq 0 ] ; then  ############# None------ASSO
			if [ $DW_WLactCNT -lt 2 ] ; then
				log "00000000000000000000000000000000000> Wlan0 and Wlan1"
				/usr/sbin/brctl addif br-lan wlan0  ##+
				/usr/sbin/brctl addif br-lan wlan1  ##+
				##
				sleep 5 # sleep 5secs to wait until network stable
			fi
		else
			################################################	############# ONE-------ASSO
			if [ $DWassoWC0 -ne 0 ] && [ $DWassoWC1 -eq 0 ] ; then  ###### wlan0--ASSO
				if [ "$DW_WLact" != "wlan0" ] ; then
					log "00000000000000000000000000000000000> Wlan0"
					/usr/sbin/brctl delif br-lan wlan1  ##-
					/usr/sbin/brctl addif br-lan wlan0  ##+
					##
					sleep 5 # sleep 5secs to wait until network stable
				fi
			fi
			if [ $DWassoWC0 -eq 0 ] && [ $DWassoWC1 -ne 0 ] ; then  ###### wlan1--ASSO
				if [ "$DW_WLact" != "wlan1" ] ; then
					log "00000000000000000000000000000000000> Wlan1"
					/usr/sbin/brctl delif br-lan wlan0  ##-
					/usr/sbin/brctl addif br-lan wlan1  ##+
					##
					sleep 5 # sleep 5secs to wait until network stable
				fi
			fi
		fi
	fi
####(while : ; do)
done


